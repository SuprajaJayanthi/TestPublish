import org.junit.*;
import org.openqa.selenium.*;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.support.ui.ExpectedConditions;
import java.util.concurrent.TimeUnit;

public class AccountManagementTest {

    // WebDriver instance
    WebDriver driver;

    // Test setup: initializing WebDriver before each test
    @Before
    public void setUp() {
        // Set path to your ChromeDriver
        System.setProperty("webdriver.chrome.driver", "path_to_your_chromedriver");
        driver = new ChromeDriver();
        driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
    }

    // Test case for User Registration
    @Test
    public void testUserRegistration() {
        driver.get("https://yourinsuranceapp.com/register");
        
        // Fill in registration form
        driver.findElement(By.id("first_name")).sendKeys("John");
        driver.findElement(By.id("last_name")).sendKeys("Doe");
        driver.findElement(By.id("email")).sendKeys("johndoe@example.com");
        driver.findElement(By.id("phone")).sendKeys("1234567890");
        driver.findElement(By.id("password")).sendKeys("Password123!");
        driver.findElement(By.id("confirm_password")).sendKeys("Password123!");
        
        // Agree to terms
        driver.findElement(By.id("terms")).click();
        
        // Submit registration form
        driver.findElement(By.id("register_button")).click();

        // Wait for redirection to login or dashboard page
        new WebDriverWait(driver, 10).until(ExpectedConditions.urlContains("dashboard"));
        
        // Verify registration success by checking page URL or any user-specific element
        Assert.assertTrue(driver.getCurrentUrl().contains("dashboard"));
    }

    // Test case for User Login
    @Test
    public void testUserLogin() {
        driver.get("https://yourinsuranceapp.com/login");

        // Log in with valid credentials
        driver.findElement(By.id("email")).sendKeys("johndoe@example.com");
        driver.findElement(By.id("password")).sendKeys("Password123!");
        driver.findElement(By.id("login_button")).click();

        // Wait for dashboard to load
        new WebDriverWait(driver, 10).until(ExpectedConditions.visibilityOfElementLocated(By.id("user_dashboard")));

        // Verify successful login
        String userName = driver.findElement(By.id("user_name")).getText();
        Assert.assertEquals("John Doe", userName);
    }

    // Test case for Invalid Login Attempt
    @Test
    public void testInvalidLogin() {
        driver.get("https://yourinsuranceapp.com/login");

        // Attempt to log in with invalid credentials
        driver.findElement(By.id("email")).sendKeys("wrongemail@example.com");
        driver.findElement(By.id("password")).sendKeys("WrongPassword123!");
        driver.findElement(By.id("login_button")).click();

        // Wait for error message to be visible
        new WebDriverWait(driver, 10).until(ExpectedConditions.visibilityOfElementLocated(By.id("login_error_message")));

        // Verify the error message
        String errorMessage = driver.findElement(By.id("login_error_message")).getText();
        Assert.assertEquals("Invalid username or password.", errorMessage);
    }

    // Test case for Forgot Password
    @Test
    public void testForgotPassword() {
        driver.get("https://yourinsuranceapp.com/login");

        // Click on "Forgot Password" link
        driver.findElement(By.id("forgot_password_link")).click();

        // Enter the registered email to reset the password
        driver.findElement(By.id("email")).sendKeys("johndoe@example.com");
        driver.findElement(By.id("submit_button")).click();

        // Wait for success message
        new WebDriverWait(driver, 10).until(ExpectedConditions.visibilityOfElementLocated(By.id("reset_success_message")));

        // Verify the success message
        String successMessage = driver.findElement(By.id("reset_success_message")).getText();
        Assert.assertEquals("Password reset email sent successfully!", successMessage);
    }

    // Test case for Change Password
    @Test
    public void testChangePassword() {
        driver.get("https://yourinsuranceapp.com/login");

        // Log in first
        driver.findElement(By.id("email")).sendKeys("johndoe@example.com");
        driver.findElement(By.id("password")).sendKeys("Password123!");
        driver.findElement(By.id("login_button")).click();

        // Navigate to Account Settings
        driver.findElement(By.id("account_settings")).click();

        // Change password
        driver.findElement(By.id("current_password")).sendKeys("Password123!");
        driver.findElement(By.id("new_password")).sendKeys("NewPassword123!");
        driver.findElement(By.id("confirm_new_password")).sendKeys("NewPassword123!");
        driver.findElement(By.id("save_changes_button")).click();

        // Verify password change success message
        new WebDriverWait(driver, 10).until(ExpectedConditions.visibilityOfElementLocated(By.id("password_change_success")));

        String successMessage = driver.findElement(By.id("password_change_success")).getText();
        Assert.assertEquals("Your password has been changed successfully.", successMessage);
    }

    // Test case for User Logout
    @Test
    public void testUserLogout() {
        driver.get("https://yourinsuranceapp.com/login");

        // Log in with valid credentials
        driver.findElement(By.id("email")).sendKeys("johndoe@example.com");
        driver.findElement(By.id("password")).sendKeys("Password123!");
        driver.findElement(By.id("login_button")).click();

        // Wait for dashboard to load
        new WebDriverWait(driver, 10).until(ExpectedConditions.visibilityOfElementLocated(By.id("user_dashboard")));

        // Click on logout
        driver.findElement(By.id("logout_button")).click();

        // Verify that the user is redirected to the login page
        new WebDriverWait(driver, 10).until(ExpectedConditions.urlContains("login"));
        Assert.assertTrue(driver.getCurrentUrl().contains("login"));
    }

    // Test cleanup: Quit WebDriver after each test
    @After
    public void tearDown() {
        if (driver != null) {
            driver.quit();
        }
    }
}
